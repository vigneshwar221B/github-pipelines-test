name: deploy env deployments

on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
      aws_account_id:
        required: true
        type: string

env:
  CI: true
  NODE_VERSION: 18.x
  TF_VERSION: '1.1.7'
  TF_AGENT_POOL_ID: 'apool-3BXHFcvMX5e3gvMT'
  TEAMS_URL: ${{ startsWith(inputs.env, 'prod') && secrets.PROD_MESSENGER_URL || secrets.DEV_QA_MESSENGER_URL}}

jobs:      
  deploy:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    outputs:
      api_url: ${{ steps.tf_output.outputs.api_url }}
      aws_region: ${{steps.tf_output.outputs.aws_region1}}
      aws_account_id: ${{ steps.tf_output.outputs.aws_account_id }}
      cognito_details_ssm_name: ${{ steps.tf_output.outputs.cognito_details_ssm_name}}
      api_automation_phone_number_ssm_name: ${{ steps.tf_output.outputs.api_automation_phone_number_ssm_name }}
      dtmf_test_sma_lambda_handler_name: ${{ steps.tf_output.outputs.dtmf_test_sma_lambda_handler_name }}
      sma_handler_lambda_name: ${{ steps.tf_output.outputs.sma_handler_lambda_name }}
      sip_rule_ssm_param: ${{ steps.tf_output.outputs.sip_rule_ssm_param }}
      dtmf_automation_dynamodb_name: ${{ steps.tf_output.outputs.dtmf_automation_dynamodb_name }}
      switchboard_dynamodb_name: ${{ steps.tf_output.outputs.switchboard_dynamodb_name }}
      primary_region_url: ${{ steps.tf_output.outputs.primary_region_url }}
      primary_region_invoke_url: ${{ steps.tf_output.outputs.primary_region_invoke_url }}
      english_fast_vrs_number: ${{steps.tf_output.outputs.english_fast_vrs_number}}
      secondary_region_url: ${{steps.tf_output.outputs.secondary_region_url}}
      hosted_zone_id: ${{steps.tf_output.outputs.hosted_zone_id}}
      domain_name: ${{steps.tf_output.outputs.domain_name}}
      environment: ${{steps.tf_output.outputs.environment}}
      us_east_1_synthetic_health_check_id: ${{steps.tf_output.outputs.us_east_1_synthetic_health_check_id}}
      us_west_2_synthetic_health_check_id: ${{steps.tf_output.outputs.us_west_2_synthetic_health_check_id}}
      secondary_region: ${{steps.tf_output.outputs.aws_region2}}
      primary_websocket_url: ${{steps.tf_output.outputs.primary_websocket_url}}
      secondary_websocket_url: ${{steps.tf_output.outputs.secondary_websocket_url}}
      websocket_domain_name: ${{steps.tf_output.outputs.websocket_domain_name}}
      cognito_username: ${{ steps.tf_output.outputs.cognito_username}}
      cognito_password: ${{ steps.tf_output.outputs.cognito_password}}
    
    strategy:
      matrix:
        include:
          - region: "primary"
            tf_base_infra_workspace: ${{ github.event.repository.name }}-infra-${{ inputs.env }}-primary
            tf_infra_workspace: ${{ github.event.repository.name }}-${{ inputs.env }}

          - region: "secondary"
            tf_base_infra_workspace: ${{ github.event.repository.name }}-infra-${{ inputs.env }}-secondary
            tf_infra_workspace:  ${{ github.event.repository.name }}-${{ inputs.env }}-${{inputs.env == 'qa' && 'secondary-region' || inputs.env == 'prod-na' && 'uw2' || 'secondary'}}
            
    steps:
      - uses: actions/checkout@v3

      - name: deploy base infra
        uses:  ./.github/actions/deploy
        with:
          env: ${{ inputs.env }}
          region: ${{ matrix.region }}
          teams_url: ${{ env.TEAMS_URL }}
          aws_account_id: ${{ inputs.aws_account_id }}
          TF_API_TOKEN: ${{secrets.TF_API_TOKEN}}
          DT_CONNECTION_AUTH_TOKEN: ${{secrets.DT_CONNECTION_AUTH_TOKEN}}
          MSTEAMS_WEBHOOK: ${{secrets.MSTEAMS_WEBHOOK}}
          tf_workspace: ${{matrix.tf_base_infra_workspace}}
          tf_folder: base_infra

      - name: deploy switchboard app
        uses:  ./.github/actions/deploy
        id: tf_output
        with:
          env: ${{ inputs.env }}
          region: ${{ matrix.region }}
          teams_url: ${{ env.TEAMS_URL }}
          aws_account_id: ${{ inputs.aws_account_id }}
          TF_API_TOKEN: ${{secrets.TF_API_TOKEN}}
          DT_CONNECTION_AUTH_TOKEN: ${{secrets.DT_CONNECTION_AUTH_TOKEN}}
          MSTEAMS_WEBHOOK: ${{secrets.MSTEAMS_WEBHOOK}}
          cognito_username: ${{ secrets.COGNITO_SERVICE_ACCOUNT_USERNAME }}
          cognito_password: ${{ secrets.COGNITO_SERVICE_ACCOUNT_PASSWORD }}
          tf_workspace: ${{matrix.tf_infra_workspace}}
          tf_folder: terraform
          download_synthetics: 'true'

  deploy_mr:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - uses: actions/checkout@v3
      - name: deploy multi region infra
        uses:  ./.github/actions/deploy
        with:
          env: ${{ inputs.env }}
          region: ${{ needs.deploy.outputs.aws_region }}
          aws_account_id: ${{ inputs.aws_account_id }}
          teams_url: ${{ env.TEAMS_URL }}
          TF_API_TOKEN: ${{secrets.TF_API_TOKEN}}
          DT_CONNECTION_AUTH_TOKEN: ${{secrets.DT_CONNECTION_AUTH_TOKEN}}
          MSTEAMS_WEBHOOK: ${{secrets.MSTEAMS_WEBHOOK}}
          tf_workspace: ${{ github.event.repository.name }}-deploy-${{ inputs.env }}-mr
          tf_folder: terraform/multi-region

          provider_region: ${{ needs.deploy.outputs.aws_region }}
          primary_region_url: ${{ needs.deploy.outputs.primary_region_url }}
          secondary_region_url: ${{ needs.deploy.outputs.secondary_region_url }}
          hosted_zone_id: ${{ needs.deploy.outputs.hosted_zone_id }}
          domain_name: ${{ needs.deploy.outputs.domain_name }}
          environment: ${{ needs.deploy.outputs.environment }}
          cognito_username: ${{ secrets.COGNITO_SERVICE_ACCOUNT_USERNAME }}
          cognito_password: ${{ secrets.COGNITO_SERVICE_ACCOUNT_PASSWORD }}
          region_1_health_check_id: ${{ needs.deploy.outputs.us_east_1_synthetic_health_check_id }}
          region_2_health_check_id: ${{ needs.deploy.outputs.us_west_2_synthetic_health_check_id }}
          primary_region: ${{ needs.deploy.outputs.aws_region }}
          secondary_region: ${{ needs.deploy.outputs.secondary_region }}
          primary_websocket_url: ${{ needs.deploy.outputs.primary_websocket_url }}
          secondary_websocket_url: ${{ needs.deploy.outputs.secondary_websocket_url }}
          websocket_domain_name: ${{ needs.deploy.outputs.websocket_domain_name }}
      - name: send app version to dynatrace
        uses: ./.github/actions/dynatrace
        with:
          env: ${{ inputs.env }}
          SEMANTIC_RELEASE_TOKEN: ${{secrets.SEMANTIC_RELEASE_TOKEN}}
          DT_URL: ${{secrets.DT_URL}}
          DT_TOKEN: ${{secrets.DT_TOKEN}}
  
  test_api:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    needs: [deploy, deploy_mr]
    environment: ${{ startsWith(inputs.env, 'prod') && 'prod' || inputs.env}}
    steps:
      - uses: actions/checkout@v3
      - name: test feature api
        uses: ./.github/actions/test_api
        with:
          aws_region: ${{ needs.deploy.outputs.aws_region }}
          aws_account_id: ${{ needs.deploy.outputs.aws_account_id }}

          teams_url: ${{ env.TEAMS_URL }}
          MSTEAMS_WEBHOOK: ${{secrets.MSTEAMS_WEBHOOK}}
          cognito_service_account_username: ${{ secrets.COGNITO_SERVICE_ACCOUNT_USERNAME }}
          cognito_service_account_password: ${{ secrets.COGNITO_SERVICE_ACCOUNT_PASSWORD }}

          switchboard_url: ${{ needs.deploy.outputs.primary_region_invoke_url }}
          cognito_details_ssm_name: ${{ needs.deploy.outputs.cognito_details_ssm_name }}
          api_automation_phone_number_ssm_name: ${{ needs.deploy.outputs.api_automation_phone_number_ssm_name }}
          dtmf_automation_test_sma_lambda_handler_name: ${{ needs.deploy.outputs.dtmf_test_sma_lambda_handler_name }}
          sma_handler_lambda_name: ${{ needs.deploy.outputs.sma_handler_lambda_name }}
          sip_rule_ssm_param: ${{ needs.deploy.outputs.sip_rule_ssm_param }}
          dtmf_automation_dynamodb_name: ${{ needs.deploy.outputs.dtmf_automation_dynamodb_name }}
          switchboard_dynamodb_name: ${{ needs.deploy.outputs.switchboard_dynamodb_name }}
          english_fast_vrs_number: ${{ needs.deploy.outputs.english_fast_vrs_number }}
          language_selection_digit: 'B'
